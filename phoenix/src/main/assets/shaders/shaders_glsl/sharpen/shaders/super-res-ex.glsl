// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying
#define COMPAT_ATTRIBUTE attribute
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec2 _texCoord;
COMPAT_VARYING     vec4 _color1;
COMPAT_VARYING     vec4 _position1;
COMPAT_VARYING     float _frame_rotation;
struct prev {
    vec2 _video_size;
    vec2 _texture_size;
float _placeholder23;
};
struct input_dummy {
    vec2 _video_size1;
    vec2 _texture_size1;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _position1;
    vec4 _color1;
    vec2 _texCoord;
};
out_vertex _ret_0;
vec4 _r0009;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 COLOR;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 COL0;
COMPAT_VARYING vec4 TEX0;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    _r0009 = VertexCoord.x*MVPMatrix[0];
    _r0009 = _r0009 + VertexCoord.y*MVPMatrix[1];
    _r0009 = _r0009 + VertexCoord.z*MVPMatrix[2];
    _r0009 = _r0009 + VertexCoord.w*MVPMatrix[3];
    _ret_0._position1 = _r0009;
    _ret_0._color1 = COLOR;
    _ret_0._texCoord = TexCoord.xy;
    gl_Position = _r0009;
    COL0 = COLOR;
    TEX0.xy = TexCoord.xy;
    return;
    COL0 = _ret_0._color1;
    TEX0.xy = _ret_0._texCoord;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec2 _texCoord;
COMPAT_VARYING     vec4 _color1;
COMPAT_VARYING     float _frame_rotation;
struct prev {
    vec2 _video_size;
    vec2 _texture_size;
float _placeholder23;
};
struct input_dummy {
    vec2 _video_size1;
    vec2 _texture_size1;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _color1;
    vec2 _texCoord;
};
vec3 _TMP57;
vec4 _TMP54;
vec4 _TMP53;
float _TMP52;
vec4 _TMP50;
vec4 _TMP49;
vec4 _TMP48;
vec4 _TMP47;
float _TMP46;
vec4 _TMP44;
vec4 _TMP43;
vec4 _TMP42;
vec4 _TMP41;
float _TMP40;
vec4 _TMP38;
vec4 _TMP37;
vec4 _TMP36;
vec4 _TMP35;
float _TMP34;
vec4 _TMP32;
vec4 _TMP31;
vec4 _TMP30;
vec4 _TMP29;
float _TMP28;
vec4 _TMP26;
vec4 _TMP25;
vec4 _TMP24;
vec4 _TMP23;
float _TMP22;
vec4 _TMP20;
vec4 _TMP19;
vec4 _TMP18;
vec4 _TMP17;
float _TMP16;
vec4 _TMP14;
vec4 _TMP13;
vec4 _TMP12;
vec4 _TMP11;
float _TMP10;
vec4 _TMP8;
vec4 _TMP7;
vec4 _TMP6;
vec4 _TMP5;
float _TMP4;
vec4 _TMP2;
vec4 _TMP1;
uniform sampler2D Texture;
prev _PASSPREV31;
vec2 _TMP64;
vec2 _x0067;
float _TMP68;
vec2 _c0073;
vec2 _c0075;
float _a0077;
float _b0077;
vec2 _a0079;
vec2 _b0079;
float _TMP80;
float _x0081;
float _x0085;
vec2 _c0087;
vec2 _c0089;
vec2 _c0091;
vec2 _c0093;
float _a0095;
float _b0095;
vec2 _a0097;
vec2 _b0097;
float _TMP98;
float _x0099;
float _x0103;
vec2 _c0105;
vec2 _c0107;
vec2 _c0109;
vec2 _c0111;
float _a0113;
float _b0113;
vec2 _a0115;
vec2 _b0115;
float _TMP116;
float _x0117;
float _x0121;
vec2 _c0123;
vec2 _c0125;
vec2 _c0127;
vec2 _c0129;
float _a0131;
float _b0131;
vec2 _a0133;
vec2 _b0133;
float _TMP134;
float _x0135;
float _x0139;
vec2 _c0141;
vec2 _c0143;
vec2 _c0145;
vec2 _c0147;
float _a0149;
float _b0149;
vec2 _a0151;
vec2 _b0151;
float _TMP152;
float _x0153;
float _x0157;
vec2 _c0159;
vec2 _c0161;
vec2 _c0163;
vec2 _c0165;
float _a0167;
float _b0167;
vec2 _a0169;
vec2 _b0169;
float _TMP170;
float _x0171;
float _x0175;
vec2 _c0177;
vec2 _c0179;
vec2 _c0181;
vec2 _c0183;
float _a0185;
float _b0185;
vec2 _a0187;
vec2 _b0187;
float _TMP188;
float _x0189;
float _x0193;
vec2 _c0195;
vec2 _c0197;
vec2 _c0199;
vec2 _c0201;
float _a0203;
float _b0203;
vec2 _a0205;
vec2 _b0205;
float _TMP206;
float _x0207;
float _x0211;
vec2 _c0213;
vec2 _c0215;
vec2 _c0217;
vec2 _c0219;
float _a0221;
float _b0221;
vec2 _a0223;
vec2 _b0223;
float _TMP224;
float _x0225;
float _x0229;
vec2 _c0231;
vec2 _c0233;
COMPAT_VARYING vec4 TEX0;
 
uniform COMPAT_PRECISION vec2 PassPrev3TextureSize;
uniform sampler2D PassPrev3Texture;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec4 _c0;
    vec2 _pos;
    vec2 _offset;
    float _W;
    vec3 _diff;
    vec3 _stab;
    float _dI2;
    float _dXY2;
    float _w;
    _c0 = COMPAT_TEXTURE(PassPrev3Texture, TEX0.xy);
    _pos = TEX0.xy*PassPrev3TextureSize - 5.00000000E-01;
    _x0067 = _pos + 5.00000000E-01;
    _TMP64 = floor(_x0067);
    _offset = _pos - _TMP64;
    _pos = _pos - _offset;
    _TMP68 = dot(_c0.xyz, vec3( 2.12599993E-01, 7.15200007E-01, 7.22000003E-02));
    _c0073 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP1 = COMPAT_TEXTURE(Texture, _c0073);
    _c0075 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP2 = COMPAT_TEXTURE(Texture, _c0075);
    _a0077 = 1.00000000E+02*(_TMP68 - _TMP1.w);
    _b0077 = 1.00000000E+02*(_TMP68 - _TMP2.w);
    _dI2 = _a0077*_b0077;
    _a0079 = vec2( -1.00000000E+00, -1.00000000E+00) - _offset;
    _b0079 = vec2( -1.00000000E+00, -1.00000000E+00) - _offset;
    _dXY2 = dot(_a0079, _b0079);
    _x0081 = -_dXY2/2.00000000E+00;
    _TMP80 = pow(2.71828198E+00, _x0081);
    _x0085 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP4 = pow(_x0085, -2.00000000E+00);
    _w = _TMP80*_TMP4;
    _c0087 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP5 = COMPAT_TEXTURE(Texture, _c0087);
    _diff = _w*_TMP5.xyz;
    _c0089 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP6 = COMPAT_TEXTURE(PassPrev3Texture, _c0089);
    _stab = _w*(_c0.xyz - _TMP6.xyz);
    _W = _w;
    _c0091 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, 0.00000000E+00)) + 5.00000000E-01);
    _TMP7 = COMPAT_TEXTURE(Texture, _c0091);
    _c0093 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, 0.00000000E+00)) + 5.00000000E-01);
    _TMP8 = COMPAT_TEXTURE(Texture, _c0093);
    _a0095 = 1.00000000E+02*(_TMP68 - _TMP7.w);
    _b0095 = 1.00000000E+02*(_TMP68 - _TMP8.w);
    _dI2 = _a0095*_b0095;
    _a0097 = vec2( -1.00000000E+00, 0.00000000E+00) - _offset;
    _b0097 = vec2( -1.00000000E+00, 0.00000000E+00) - _offset;
    _dXY2 = dot(_a0097, _b0097);
    _x0099 = -_dXY2/2.00000000E+00;
    _TMP98 = pow(2.71828198E+00, _x0099);
    _x0103 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP10 = pow(_x0103, -2.00000000E+00);
    _w = _TMP98*_TMP10;
    _c0105 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, 0.00000000E+00)) + 5.00000000E-01);
    _TMP11 = COMPAT_TEXTURE(Texture, _c0105);
    _diff = _diff + _w*_TMP11.xyz;
    _c0107 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, 0.00000000E+00)) + 5.00000000E-01);
    _TMP12 = COMPAT_TEXTURE(PassPrev3Texture, _c0107);
    _stab = _stab + _w*(_c0.xyz - _TMP12.xyz);
    _W = _W + _w;
    _c0109 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP13 = COMPAT_TEXTURE(Texture, _c0109);
    _c0111 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP14 = COMPAT_TEXTURE(Texture, _c0111);
    _a0113 = 1.00000000E+02*(_TMP68 - _TMP13.w);
    _b0113 = 1.00000000E+02*(_TMP68 - _TMP14.w);
    _dI2 = _a0113*_b0113;
    _a0115 = vec2( -1.00000000E+00, 1.00000000E+00) - _offset;
    _b0115 = vec2( -1.00000000E+00, 1.00000000E+00) - _offset;
    _dXY2 = dot(_a0115, _b0115);
    _x0117 = -_dXY2/2.00000000E+00;
    _TMP116 = pow(2.71828198E+00, _x0117);
    _x0121 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP16 = pow(_x0121, -2.00000000E+00);
    _w = _TMP116*_TMP16;
    _c0123 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP17 = COMPAT_TEXTURE(Texture, _c0123);
    _diff = _diff + _w*_TMP17.xyz;
    _c0125 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( -1.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP18 = COMPAT_TEXTURE(PassPrev3Texture, _c0125);
    _stab = _stab + _w*(_c0.xyz - _TMP18.xyz);
    _W = _W + _w;
    _c0127 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 0.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP19 = COMPAT_TEXTURE(Texture, _c0127);
    _c0129 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 0.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP20 = COMPAT_TEXTURE(Texture, _c0129);
    _a0131 = 1.00000000E+02*(_TMP68 - _TMP19.w);
    _b0131 = 1.00000000E+02*(_TMP68 - _TMP20.w);
    _dI2 = _a0131*_b0131;
    _a0133 = vec2( 0.00000000E+00, -1.00000000E+00) - _offset;
    _b0133 = vec2( 0.00000000E+00, -1.00000000E+00) - _offset;
    _dXY2 = dot(_a0133, _b0133);
    _x0135 = -_dXY2/2.00000000E+00;
    _TMP134 = pow(2.71828198E+00, _x0135);
    _x0139 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP22 = pow(_x0139, -2.00000000E+00);
    _w = _TMP134*_TMP22;
    _c0141 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 0.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP23 = COMPAT_TEXTURE(Texture, _c0141);
    _diff = _diff + _w*_TMP23.xyz;
    _c0143 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 0.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP24 = COMPAT_TEXTURE(PassPrev3Texture, _c0143);
    _stab = _stab + _w*(_c0.xyz - _TMP24.xyz);
    _W = _W + _w;
    _c0145 = (1.00000000E+00/PassPrev3TextureSize)*(_pos + 5.00000000E-01);
    _TMP25 = COMPAT_TEXTURE(Texture, _c0145);
    _c0147 = (1.00000000E+00/PassPrev3TextureSize)*(_pos + 5.00000000E-01);
    _TMP26 = COMPAT_TEXTURE(Texture, _c0147);
    _a0149 = 1.00000000E+02*(_TMP68 - _TMP25.w);
    _b0149 = 1.00000000E+02*(_TMP68 - _TMP26.w);
    _dI2 = _a0149*_b0149;
    _a0151 = vec2( 0.00000000E+00, 0.00000000E+00) - _offset;
    _b0151 = vec2( 0.00000000E+00, 0.00000000E+00) - _offset;
    _dXY2 = dot(_a0151, _b0151);
    _x0153 = -_dXY2/2.00000000E+00;
    _TMP152 = pow(2.71828198E+00, _x0153);
    _x0157 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP28 = pow(_x0157, -2.00000000E+00);
    _w = _TMP152*_TMP28;
    _c0159 = (1.00000000E+00/PassPrev3TextureSize)*(_pos + 5.00000000E-01);
    _TMP29 = COMPAT_TEXTURE(Texture, _c0159);
    _diff = _diff + _w*_TMP29.xyz;
    _c0161 = (1.00000000E+00/PassPrev3TextureSize)*(_pos + 5.00000000E-01);
    _TMP30 = COMPAT_TEXTURE(PassPrev3Texture, _c0161);
    _stab = _stab + _w*(_c0.xyz - _TMP30.xyz);
    _W = _W + _w;
    _c0163 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 0.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP31 = COMPAT_TEXTURE(Texture, _c0163);
    _c0165 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 0.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP32 = COMPAT_TEXTURE(Texture, _c0165);
    _a0167 = 1.00000000E+02*(_TMP68 - _TMP31.w);
    _b0167 = 1.00000000E+02*(_TMP68 - _TMP32.w);
    _dI2 = _a0167*_b0167;
    _a0169 = vec2( 0.00000000E+00, 1.00000000E+00) - _offset;
    _b0169 = vec2( 0.00000000E+00, 1.00000000E+00) - _offset;
    _dXY2 = dot(_a0169, _b0169);
    _x0171 = -_dXY2/2.00000000E+00;
    _TMP170 = pow(2.71828198E+00, _x0171);
    _x0175 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP34 = pow(_x0175, -2.00000000E+00);
    _w = _TMP170*_TMP34;
    _c0177 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 0.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP35 = COMPAT_TEXTURE(Texture, _c0177);
    _diff = _diff + _w*_TMP35.xyz;
    _c0179 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 0.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP36 = COMPAT_TEXTURE(PassPrev3Texture, _c0179);
    _stab = _stab + _w*(_c0.xyz - _TMP36.xyz);
    _W = _W + _w;
    _c0181 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP37 = COMPAT_TEXTURE(Texture, _c0181);
    _c0183 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP38 = COMPAT_TEXTURE(Texture, _c0183);
    _a0185 = 1.00000000E+02*(_TMP68 - _TMP37.w);
    _b0185 = 1.00000000E+02*(_TMP68 - _TMP38.w);
    _dI2 = _a0185*_b0185;
    _a0187 = vec2( 1.00000000E+00, -1.00000000E+00) - _offset;
    _b0187 = vec2( 1.00000000E+00, -1.00000000E+00) - _offset;
    _dXY2 = dot(_a0187, _b0187);
    _x0189 = -_dXY2/2.00000000E+00;
    _TMP188 = pow(2.71828198E+00, _x0189);
    _x0193 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP40 = pow(_x0193, -2.00000000E+00);
    _w = _TMP188*_TMP40;
    _c0195 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP41 = COMPAT_TEXTURE(Texture, _c0195);
    _diff = _diff + _w*_TMP41.xyz;
    _c0197 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, -1.00000000E+00)) + 5.00000000E-01);
    _TMP42 = COMPAT_TEXTURE(PassPrev3Texture, _c0197);
    _stab = _stab + _w*(_c0.xyz - _TMP42.xyz);
    _W = _W + _w;
    _c0199 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, 0.00000000E+00)) + 5.00000000E-01);
    _TMP43 = COMPAT_TEXTURE(Texture, _c0199);
    _c0201 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, 0.00000000E+00)) + 5.00000000E-01);
    _TMP44 = COMPAT_TEXTURE(Texture, _c0201);
    _a0203 = 1.00000000E+02*(_TMP68 - _TMP43.w);
    _b0203 = 1.00000000E+02*(_TMP68 - _TMP44.w);
    _dI2 = _a0203*_b0203;
    _a0205 = vec2( 1.00000000E+00, 0.00000000E+00) - _offset;
    _b0205 = vec2( 1.00000000E+00, 0.00000000E+00) - _offset;
    _dXY2 = dot(_a0205, _b0205);
    _x0207 = -_dXY2/2.00000000E+00;
    _TMP206 = pow(2.71828198E+00, _x0207);
    _x0211 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP46 = pow(_x0211, -2.00000000E+00);
    _w = _TMP206*_TMP46;
    _c0213 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, 0.00000000E+00)) + 5.00000000E-01);
    _TMP47 = COMPAT_TEXTURE(Texture, _c0213);
    _diff = _diff + _w*_TMP47.xyz;
    _c0215 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, 0.00000000E+00)) + 5.00000000E-01);
    _TMP48 = COMPAT_TEXTURE(PassPrev3Texture, _c0215);
    _stab = _stab + _w*(_c0.xyz - _TMP48.xyz);
    _W = _W + _w;
    _c0217 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP49 = COMPAT_TEXTURE(Texture, _c0217);
    _c0219 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP50 = COMPAT_TEXTURE(Texture, _c0219);
    _a0221 = 1.00000000E+02*(_TMP68 - _TMP49.w);
    _b0221 = 1.00000000E+02*(_TMP68 - _TMP50.w);
    _dI2 = _a0221*_b0221;
    _a0223 = vec2( 1.00000000E+00, 1.00000000E+00) - _offset;
    _b0223 = vec2( 1.00000000E+00, 1.00000000E+00) - _offset;
    _dXY2 = dot(_a0223, _b0223);
    _x0225 = -_dXY2/2.00000000E+00;
    _TMP224 = pow(2.71828198E+00, _x0225);
    _x0229 = 1.00000000E+00 + _dI2/2.00000000E+00;
    _TMP52 = pow(_x0229, -2.00000000E+00);
    _w = _TMP224*_TMP52;
    _c0231 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP53 = COMPAT_TEXTURE(Texture, _c0231);
    _diff = _diff + _w*_TMP53.xyz;
    _c0233 = (1.00000000E+00/PassPrev3TextureSize)*((_pos + vec2( 1.00000000E+00, 1.00000000E+00)) + 5.00000000E-01);
    _TMP54 = COMPAT_TEXTURE(PassPrev3Texture, _c0233);
    _stab = _stab + _w*(_c0.xyz - _TMP54.xyz);
    _W = _W + _w;
    _diff = _diff/_W;
    _stab = _stab/_W;
    _TMP57 = _diff + 3.00000012E-01*(_stab - _diff);
    _c0.xyz = _c0.xyz - 8.00000012E-01*_TMP57;
    FragColor = _c0;
    return;
} 
#endif
