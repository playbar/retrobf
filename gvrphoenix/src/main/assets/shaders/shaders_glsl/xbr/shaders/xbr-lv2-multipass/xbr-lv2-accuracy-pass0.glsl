// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying
#define COMPAT_ATTRIBUTE attribute
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 _t7;
COMPAT_VARYING     vec4 _t6;
COMPAT_VARYING     vec4 _t5;
COMPAT_VARYING     vec4 _t4;
COMPAT_VARYING     vec4 _t3;
COMPAT_VARYING     vec4 _t2;
COMPAT_VARYING     vec4 _t1;
COMPAT_VARYING     vec2 _texCoord1;
COMPAT_VARYING     vec4 _color1;
COMPAT_VARYING     vec4 _position1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _position1;
    vec4 _color1;
    vec2 _texCoord1;
    vec4 _t1;
    vec4 _t2;
    vec4 _t3;
    vec4 _t4;
    vec4 _t5;
    vec4 _t6;
    vec4 _t7;
};
out_vertex _ret_0;
input_dummy _IN1;
vec4 _r0006;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 COLOR;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 COL0;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
COMPAT_VARYING vec4 TEX2;
COMPAT_VARYING vec4 TEX3;
COMPAT_VARYING vec4 TEX4;
COMPAT_VARYING vec4 TEX5;
COMPAT_VARYING vec4 TEX6;
COMPAT_VARYING vec4 TEX7;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    out_vertex _OUT;
    vec2 _ps;
    _r0006 = VertexCoord.x*MVPMatrix[0];
    _r0006 = _r0006 + VertexCoord.y*MVPMatrix[1];
    _r0006 = _r0006 + VertexCoord.z*MVPMatrix[2];
    _r0006 = _r0006 + VertexCoord.w*MVPMatrix[3];
    _ps = vec2(1.00000000E+00/TextureSize.x, 1.00000000E+00/TextureSize.y);
    _OUT._t1 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, -2.00000000E+00*_ps.y);
    _OUT._t2 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, -_ps.y);
    _OUT._t3 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, 0.00000000E+00);
    _OUT._t4 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, _ps.y);
    _OUT._t5 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, 2.00000000E+00*_ps.y);
    _OUT._t6 = TexCoord.xyyy + vec4(-2.00000000E+00*_ps.x, -_ps.y, 0.00000000E+00, _ps.y);
    _OUT._t7 = TexCoord.xyyy + vec4(2.00000000E+00*_ps.x, -_ps.y, 0.00000000E+00, _ps.y);
    _ret_0._position1 = _r0006;
    _ret_0._color1 = COLOR;
    _ret_0._texCoord1 = TexCoord.xy;
    _ret_0._t1 = _OUT._t1;
    _ret_0._t2 = _OUT._t2;
    _ret_0._t3 = _OUT._t3;
    _ret_0._t4 = _OUT._t4;
    _ret_0._t5 = _OUT._t5;
    _ret_0._t6 = _OUT._t6;
    _ret_0._t7 = _OUT._t7;
    gl_Position = _r0006;
    COL0 = COLOR;
    TEX0.xy = TexCoord.xy;
    TEX1 = _OUT._t1;
    TEX2 = _OUT._t2;
    TEX3 = _OUT._t3;
    TEX4 = _OUT._t4;
    TEX5 = _OUT._t5;
    TEX6 = _OUT._t6;
    TEX7 = _OUT._t7;
    return;
    COL0 = _ret_0._color1;
    TEX0.xy = _ret_0._texCoord1;
    TEX1 = _ret_0._t1;
    TEX2 = _ret_0._t2;
    TEX3 = _ret_0._t3;
    TEX4 = _ret_0._t4;
    TEX5 = _ret_0._t5;
    TEX6 = _ret_0._t6;
    TEX7 = _ret_0._t7;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 _t7;
COMPAT_VARYING     vec4 _t6;
COMPAT_VARYING     vec4 _t5;
COMPAT_VARYING     vec4 _t4;
COMPAT_VARYING     vec4 _t3;
COMPAT_VARYING     vec4 _t2;
COMPAT_VARYING     vec4 _t1;
COMPAT_VARYING     vec2 _texCoord;
COMPAT_VARYING     vec4 _color;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _color;
    vec2 _texCoord;
    vec4 _t1;
    vec4 _t2;
    vec4 _t3;
    vec4 _t4;
    vec4 _t5;
    vec4 _t6;
    vec4 _t7;
};
vec4 _TMP39;
bvec4 _TMP26;
vec4 _TMP25;
vec4 _TMP24;
vec4 _TMP36;
float _TMP37;
float _TMP38;
bvec4 _TMP23;
vec4 _TMP22;
vec4 _TMP21;
vec4 _TMP31;
vec4 _TMP30;
vec4 _TMP29;
vec4 _TMP28;
vec4 _TMP27;
vec4 _TMP20;
vec4 _TMP19;
vec4 _TMP18;
vec4 _TMP17;
vec4 _TMP16;
vec4 _TMP15;
vec4 _TMP14;
vec4 _TMP13;
vec4 _TMP12;
vec4 _TMP11;
vec4 _TMP10;
vec4 _TMP9;
vec4 _TMP8;
vec4 _TMP7;
vec4 _TMP6;
vec4 _TMP5;
vec4 _TMP4;
vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
vec4 _TMP0;
uniform sampler2D Texture;
vec4 _r0104;
vec4 _r0114;
vec4 _r0124;
float _TMP167;
float _rmean0168;
vec3 _diff0168;
vec3 _K0168;
vec3 _a0170;
float _TMP175;
float _rmean0176;
vec3 _diff0176;
vec3 _K0176;
vec3 _a0178;
float _TMP183;
float _rmean0184;
vec3 _diff0184;
vec3 _K0184;
vec3 _a0186;
float _TMP191;
float _rmean0192;
vec3 _diff0192;
vec3 _K0192;
vec3 _a0194;
float _TMP201;
float _rmean0202;
vec3 _diff0202;
vec3 _K0202;
vec3 _a0204;
float _TMP209;
float _rmean0210;
vec3 _diff0210;
vec3 _K0210;
vec3 _a0212;
float _TMP217;
float _rmean0218;
vec3 _diff0218;
vec3 _K0218;
vec3 _a0220;
float _TMP225;
float _rmean0226;
vec3 _diff0226;
vec3 _K0226;
vec3 _a0228;
float _TMP235;
float _rmean0236;
vec3 _diff0236;
vec3 _K0236;
vec3 _a0238;
float _TMP243;
float _rmean0244;
vec3 _diff0244;
vec3 _K0244;
vec3 _a0246;
float _TMP251;
float _rmean0252;
vec3 _diff0252;
vec3 _K0252;
vec3 _a0254;
float _TMP259;
float _rmean0260;
vec3 _diff0260;
vec3 _K0260;
vec3 _a0262;
float _TMP269;
float _rmean0270;
vec3 _diff0270;
vec3 _K0270;
vec3 _a0272;
float _TMP277;
float _rmean0278;
vec3 _diff0278;
vec3 _K0278;
vec3 _a0280;
float _TMP285;
float _rmean0286;
vec3 _diff0286;
vec3 _K0286;
vec3 _a0288;
float _TMP293;
float _rmean0294;
vec3 _diff0294;
vec3 _K0294;
vec3 _a0296;
float _TMP303;
float _rmean0304;
vec3 _diff0304;
vec3 _K0304;
vec3 _a0306;
float _TMP311;
float _rmean0312;
vec3 _diff0312;
vec3 _K0312;
vec3 _a0314;
float _TMP319;
float _rmean0320;
vec3 _diff0320;
vec3 _K0320;
vec3 _a0322;
float _TMP327;
float _rmean0328;
vec3 _diff0328;
vec3 _K0328;
vec3 _a0330;
float _TMP339;
float _rmean0340;
vec3 _diff0340;
vec3 _K0340;
vec3 _a0342;
float _TMP347;
float _rmean0348;
vec3 _diff0348;
vec3 _K0348;
vec3 _a0350;
float _TMP355;
float _rmean0356;
vec3 _diff0356;
vec3 _K0356;
vec3 _a0358;
float _TMP363;
float _rmean0364;
vec3 _diff0364;
vec3 _K0364;
vec3 _a0366;
float _TMP373;
float _rmean0374;
vec3 _diff0374;
vec3 _K0374;
vec3 _a0376;
float _TMP381;
float _rmean0382;
vec3 _diff0382;
vec3 _K0382;
vec3 _a0384;
float _TMP389;
float _rmean0390;
vec3 _diff0390;
vec3 _K0390;
vec3 _a0392;
float _TMP397;
float _rmean0398;
vec3 _diff0398;
vec3 _K0398;
vec3 _a0400;
float _TMP407;
float _rmean0408;
vec3 _diff0408;
vec3 _K0408;
vec3 _a0410;
float _TMP415;
float _rmean0416;
vec3 _diff0416;
vec3 _K0416;
vec3 _a0418;
float _TMP423;
float _rmean0424;
vec3 _diff0424;
vec3 _K0424;
vec3 _a0426;
float _TMP431;
float _rmean0432;
vec3 _diff0432;
vec3 _K0432;
vec3 _a0434;
float _TMP441;
float _rmean0442;
vec3 _diff0442;
vec3 _K0442;
vec3 _a0444;
float _TMP449;
float _rmean0450;
vec3 _diff0450;
vec3 _K0450;
vec3 _a0452;
float _TMP457;
float _rmean0458;
vec3 _diff0458;
vec3 _K0458;
vec3 _a0460;
float _TMP465;
float _rmean0466;
vec3 _diff0466;
vec3 _K0466;
vec3 _a0468;
float _TMP475;
float _rmean0476;
vec3 _diff0476;
vec3 _K0476;
vec3 _a0478;
float _TMP483;
float _rmean0484;
vec3 _diff0484;
vec3 _K0484;
vec3 _a0486;
float _TMP491;
float _rmean0492;
vec3 _diff0492;
vec3 _K0492;
vec3 _a0494;
float _TMP499;
float _rmean0500;
vec3 _diff0500;
vec3 _K0500;
vec3 _a0502;
float _TMP509;
float _rmean0510;
vec3 _diff0510;
vec3 _K0510;
vec3 _a0512;
float _TMP517;
float _rmean0518;
vec3 _diff0518;
vec3 _K0518;
vec3 _a0520;
float _TMP525;
float _rmean0526;
vec3 _diff0526;
vec3 _K0526;
vec3 _a0528;
float _TMP533;
float _rmean0534;
vec3 _diff0534;
vec3 _K0534;
vec3 _a0536;
float _TMP543;
float _rmean0544;
vec3 _diff0544;
vec3 _K0544;
vec3 _a0546;
float _TMP551;
float _rmean0552;
vec3 _diff0552;
vec3 _K0552;
vec3 _a0554;
float _TMP559;
float _rmean0560;
vec3 _diff0560;
vec3 _K0560;
vec3 _a0562;
float _TMP567;
float _rmean0568;
vec3 _diff0568;
vec3 _K0568;
vec3 _a0570;
float _TMP579;
float _rmean0580;
vec3 _diff0580;
vec3 _K0580;
vec3 _a0582;
float _TMP587;
float _rmean0588;
vec3 _diff0588;
vec3 _K0588;
vec3 _a0590;
float _TMP595;
float _rmean0596;
vec3 _diff0596;
vec3 _K0596;
vec3 _a0598;
float _TMP603;
float _rmean0604;
vec3 _diff0604;
vec3 _K0604;
vec3 _a0606;
float _TMP613;
float _rmean0614;
vec3 _diff0614;
vec3 _K0614;
vec3 _a0616;
float _TMP621;
float _rmean0622;
vec3 _diff0622;
vec3 _K0622;
vec3 _a0624;
float _TMP629;
float _rmean0630;
vec3 _diff0630;
vec3 _K0630;
vec3 _a0632;
float _TMP637;
float _rmean0638;
vec3 _diff0638;
vec3 _K0638;
vec3 _a0640;
float _TMP647;
float _rmean0648;
vec3 _diff0648;
vec3 _K0648;
vec3 _a0650;
float _TMP655;
float _rmean0656;
vec3 _diff0656;
vec3 _K0656;
vec3 _a0658;
float _TMP663;
float _rmean0664;
vec3 _diff0664;
vec3 _K0664;
vec3 _a0666;
float _TMP671;
float _rmean0672;
vec3 _diff0672;
vec3 _K0672;
vec3 _a0674;
float _TMP683;
float _rmean0684;
vec3 _diff0684;
vec3 _K0684;
vec3 _a0686;
float _TMP691;
float _rmean0692;
vec3 _diff0692;
vec3 _K0692;
vec3 _a0694;
float _TMP699;
float _rmean0700;
vec3 _diff0700;
vec3 _K0700;
vec3 _a0702;
float _TMP707;
float _rmean0708;
vec3 _diff0708;
vec3 _K0708;
vec3 _a0710;
vec4 _a0716;
vec4 _a0718;
vec4 _a0720;
vec4 _a0722;
vec4 _x0726;
vec4 _TMP727;
COMPAT_VARYING vec4 TEX1;
COMPAT_VARYING vec4 TEX2;
COMPAT_VARYING vec4 TEX3;
COMPAT_VARYING vec4 TEX4;
COMPAT_VARYING vec4 TEX5;
COMPAT_VARYING vec4 TEX6;
COMPAT_VARYING vec4 TEX7;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    bvec4 _edri;
    bvec4 _edr;
    bvec4 _edr_left;
    bvec4 _edr_up;
    bvec4 _interp_restriction_lv1;
    bvec4 _interp_restriction_lv2_left;
    bvec4 _interp_restriction_lv2_up;
    vec4 _wd1;
    vec4 _wd2;
    vec4 _info;
    _TMP0 = COMPAT_TEXTURE(Texture, TEX1.xw);
    _TMP1 = COMPAT_TEXTURE(Texture, TEX1.yw);
    _TMP2 = COMPAT_TEXTURE(Texture, TEX1.zw);
    _TMP3 = COMPAT_TEXTURE(Texture, TEX2.xw);
    _TMP4 = COMPAT_TEXTURE(Texture, TEX2.yw);
    _TMP5 = COMPAT_TEXTURE(Texture, TEX2.zw);
    _TMP6 = COMPAT_TEXTURE(Texture, TEX3.xw);
    _TMP7 = COMPAT_TEXTURE(Texture, TEX3.yw);
    _TMP8 = COMPAT_TEXTURE(Texture, TEX3.zw);
    _TMP9 = COMPAT_TEXTURE(Texture, TEX4.xw);
    _TMP10 = COMPAT_TEXTURE(Texture, TEX4.yw);
    _TMP11 = COMPAT_TEXTURE(Texture, TEX4.zw);
    _TMP12 = COMPAT_TEXTURE(Texture, TEX5.xw);
    _TMP13 = COMPAT_TEXTURE(Texture, TEX5.yw);
    _TMP14 = COMPAT_TEXTURE(Texture, TEX5.zw);
    _TMP15 = COMPAT_TEXTURE(Texture, TEX6.xy);
    _TMP16 = COMPAT_TEXTURE(Texture, TEX6.xz);
    _TMP17 = COMPAT_TEXTURE(Texture, TEX6.xw);
    _TMP18 = COMPAT_TEXTURE(Texture, TEX7.xy);
    _TMP19 = COMPAT_TEXTURE(Texture, TEX7.xz);
    _TMP20 = COMPAT_TEXTURE(Texture, TEX7.xw);
    _r0104.x = dot(_TMP4.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0104.y = dot(_TMP6.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0104.z = dot(_TMP10.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0104.w = dot(_TMP8.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0114.x = dot(_TMP5.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0114.y = dot(_TMP3.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0114.z = dot(_TMP9.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0114.w = dot(_TMP11.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0124.x = dot(_TMP7.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0124.y = dot(_TMP7.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0124.z = dot(_TMP7.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _r0124.w = dot(_TMP7.xyz, vec3( 6.55360000E+04, 2.56000000E+02, 1.00000000E+00));
    _interp_restriction_lv1 = bvec4(_r0124.x != _r0104.w && _r0124.x != _r0104.z, _r0124.y != _r0104.x && _r0124.y != _r0104.w, _r0124.z != _r0104.y && _r0124.z != _r0104.x, _r0124.w != _r0104.z && _r0124.w != _r0104.y);
    _interp_restriction_lv2_left = bvec4(_r0124.x != _r0114.z && _r0104.y != _r0114.z, _r0124.y != _r0114.w && _r0104.z != _r0114.w, _r0124.z != _r0114.x && _r0104.w != _r0114.x, _r0124.w != _r0114.y && _r0104.x != _r0114.y);
    _interp_restriction_lv2_up = bvec4(_r0124.x != _r0114.x && _r0104.x != _r0114.x, _r0124.y != _r0114.y && _r0104.y != _r0114.y, _r0124.z != _r0114.z && _r0104.z != _r0114.z, _r0124.w != _r0114.w && _r0104.w != _r0114.w);
    _rmean0168 = (_TMP7.x + _TMP5.x)/2.00000000E+00;
    _diff0168 = _TMP7.xyz - _TMP5.xyz;
    _K0168 = vec3(1.70000000E+01 + _rmean0168, 2.00000000E+01, 3.00000000E+00 - _rmean0168);
    _a0170 = _K0168*_diff0168;
    _TMP37 = dot(_a0170, _diff0168);
    _TMP38 = inversesqrt(_TMP37);
    _TMP167 = 1.00000000E+00/_TMP38;
    _rmean0176 = (_TMP7.x + _TMP3.x)/2.00000000E+00;
    _diff0176 = _TMP7.xyz - _TMP3.xyz;
    _K0176 = vec3(1.70000000E+01 + _rmean0176, 2.00000000E+01, 3.00000000E+00 - _rmean0176);
    _a0178 = _K0176*_diff0176;
    _TMP37 = dot(_a0178, _diff0176);
    _TMP38 = inversesqrt(_TMP37);
    _TMP175 = 1.00000000E+00/_TMP38;
    _rmean0184 = (_TMP7.x + _TMP9.x)/2.00000000E+00;
    _diff0184 = _TMP7.xyz - _TMP9.xyz;
    _K0184 = vec3(1.70000000E+01 + _rmean0184, 2.00000000E+01, 3.00000000E+00 - _rmean0184);
    _a0186 = _K0184*_diff0184;
    _TMP37 = dot(_a0186, _diff0184);
    _TMP38 = inversesqrt(_TMP37);
    _TMP183 = 1.00000000E+00/_TMP38;
    _rmean0192 = (_TMP7.x + _TMP11.x)/2.00000000E+00;
    _diff0192 = _TMP7.xyz - _TMP11.xyz;
    _K0192 = vec3(1.70000000E+01 + _rmean0192, 2.00000000E+01, 3.00000000E+00 - _rmean0192);
    _a0194 = _K0192*_diff0192;
    _TMP37 = dot(_a0194, _diff0192);
    _TMP38 = inversesqrt(_TMP37);
    _TMP191 = 1.00000000E+00/_TMP38;
    _TMP27 = vec4(_TMP167, _TMP175, _TMP183, _TMP191);
    _rmean0202 = (_TMP7.x + _TMP9.x)/2.00000000E+00;
    _diff0202 = _TMP7.xyz - _TMP9.xyz;
    _K0202 = vec3(1.70000000E+01 + _rmean0202, 2.00000000E+01, 3.00000000E+00 - _rmean0202);
    _a0204 = _K0202*_diff0202;
    _TMP37 = dot(_a0204, _diff0202);
    _TMP38 = inversesqrt(_TMP37);
    _TMP201 = 1.00000000E+00/_TMP38;
    _rmean0210 = (_TMP7.x + _TMP11.x)/2.00000000E+00;
    _diff0210 = _TMP7.xyz - _TMP11.xyz;
    _K0210 = vec3(1.70000000E+01 + _rmean0210, 2.00000000E+01, 3.00000000E+00 - _rmean0210);
    _a0212 = _K0210*_diff0210;
    _TMP37 = dot(_a0212, _diff0210);
    _TMP38 = inversesqrt(_TMP37);
    _TMP209 = 1.00000000E+00/_TMP38;
    _rmean0218 = (_TMP7.x + _TMP5.x)/2.00000000E+00;
    _diff0218 = _TMP7.xyz - _TMP5.xyz;
    _K0218 = vec3(1.70000000E+01 + _rmean0218, 2.00000000E+01, 3.00000000E+00 - _rmean0218);
    _a0220 = _K0218*_diff0218;
    _TMP37 = dot(_a0220, _diff0218);
    _TMP38 = inversesqrt(_TMP37);
    _TMP217 = 1.00000000E+00/_TMP38;
    _rmean0226 = (_TMP7.x + _TMP3.x)/2.00000000E+00;
    _diff0226 = _TMP7.xyz - _TMP3.xyz;
    _K0226 = vec3(1.70000000E+01 + _rmean0226, 2.00000000E+01, 3.00000000E+00 - _rmean0226);
    _a0228 = _K0226*_diff0226;
    _TMP37 = dot(_a0228, _diff0226);
    _TMP38 = inversesqrt(_TMP37);
    _TMP225 = 1.00000000E+00/_TMP38;
    _TMP28 = vec4(_TMP201, _TMP209, _TMP217, _TMP225);
    _rmean0236 = (_TMP11.x + _TMP13.x)/2.00000000E+00;
    _diff0236 = _TMP11.xyz - _TMP13.xyz;
    _K0236 = vec3(1.70000000E+01 + _rmean0236, 2.00000000E+01, 3.00000000E+00 - _rmean0236);
    _a0238 = _K0236*_diff0236;
    _TMP37 = dot(_a0238, _diff0236);
    _TMP38 = inversesqrt(_TMP37);
    _TMP235 = 1.00000000E+00/_TMP38;
    _rmean0244 = (_TMP5.x + _TMP19.x)/2.00000000E+00;
    _diff0244 = _TMP5.xyz - _TMP19.xyz;
    _K0244 = vec3(1.70000000E+01 + _rmean0244, 2.00000000E+01, 3.00000000E+00 - _rmean0244);
    _a0246 = _K0244*_diff0244;
    _TMP37 = dot(_a0246, _diff0244);
    _TMP38 = inversesqrt(_TMP37);
    _TMP243 = 1.00000000E+00/_TMP38;
    _rmean0252 = (_TMP3.x + _TMP1.x)/2.00000000E+00;
    _diff0252 = _TMP3.xyz - _TMP1.xyz;
    _K0252 = vec3(1.70000000E+01 + _rmean0252, 2.00000000E+01, 3.00000000E+00 - _rmean0252);
    _a0254 = _K0252*_diff0252;
    _TMP37 = dot(_a0254, _diff0252);
    _TMP38 = inversesqrt(_TMP37);
    _TMP251 = 1.00000000E+00/_TMP38;
    _rmean0260 = (_TMP9.x + _TMP16.x)/2.00000000E+00;
    _diff0260 = _TMP9.xyz - _TMP16.xyz;
    _K0260 = vec3(1.70000000E+01 + _rmean0260, 2.00000000E+01, 3.00000000E+00 - _rmean0260);
    _a0262 = _K0260*_diff0260;
    _TMP37 = dot(_a0262, _diff0260);
    _TMP38 = inversesqrt(_TMP37);
    _TMP259 = 1.00000000E+00/_TMP38;
    _TMP29 = vec4(_TMP235, _TMP243, _TMP251, _TMP259);
    _rmean0270 = (_TMP11.x + _TMP19.x)/2.00000000E+00;
    _diff0270 = _TMP11.xyz - _TMP19.xyz;
    _K0270 = vec3(1.70000000E+01 + _rmean0270, 2.00000000E+01, 3.00000000E+00 - _rmean0270);
    _a0272 = _K0270*_diff0270;
    _TMP37 = dot(_a0272, _diff0270);
    _TMP38 = inversesqrt(_TMP37);
    _TMP269 = 1.00000000E+00/_TMP38;
    _rmean0278 = (_TMP5.x + _TMP1.x)/2.00000000E+00;
    _diff0278 = _TMP5.xyz - _TMP1.xyz;
    _K0278 = vec3(1.70000000E+01 + _rmean0278, 2.00000000E+01, 3.00000000E+00 - _rmean0278);
    _a0280 = _K0278*_diff0278;
    _TMP37 = dot(_a0280, _diff0278);
    _TMP38 = inversesqrt(_TMP37);
    _TMP277 = 1.00000000E+00/_TMP38;
    _rmean0286 = (_TMP3.x + _TMP16.x)/2.00000000E+00;
    _diff0286 = _TMP3.xyz - _TMP16.xyz;
    _K0286 = vec3(1.70000000E+01 + _rmean0286, 2.00000000E+01, 3.00000000E+00 - _rmean0286);
    _a0288 = _K0286*_diff0286;
    _TMP37 = dot(_a0288, _diff0286);
    _TMP38 = inversesqrt(_TMP37);
    _TMP285 = 1.00000000E+00/_TMP38;
    _rmean0294 = (_TMP9.x + _TMP13.x)/2.00000000E+00;
    _diff0294 = _TMP9.xyz - _TMP13.xyz;
    _K0294 = vec3(1.70000000E+01 + _rmean0294, 2.00000000E+01, 3.00000000E+00 - _rmean0294);
    _a0296 = _K0294*_diff0294;
    _TMP37 = dot(_a0296, _diff0294);
    _TMP38 = inversesqrt(_TMP37);
    _TMP293 = 1.00000000E+00/_TMP38;
    _TMP30 = vec4(_TMP269, _TMP277, _TMP285, _TMP293);
    _rmean0304 = (_TMP10.x + _TMP8.x)/2.00000000E+00;
    _diff0304 = _TMP10.xyz - _TMP8.xyz;
    _K0304 = vec3(1.70000000E+01 + _rmean0304, 2.00000000E+01, 3.00000000E+00 - _rmean0304);
    _a0306 = _K0304*_diff0304;
    _TMP37 = dot(_a0306, _diff0304);
    _TMP38 = inversesqrt(_TMP37);
    _TMP303 = 1.00000000E+00/_TMP38;
    _rmean0312 = (_TMP8.x + _TMP4.x)/2.00000000E+00;
    _diff0312 = _TMP8.xyz - _TMP4.xyz;
    _K0312 = vec3(1.70000000E+01 + _rmean0312, 2.00000000E+01, 3.00000000E+00 - _rmean0312);
    _a0314 = _K0312*_diff0312;
    _TMP37 = dot(_a0314, _diff0312);
    _TMP38 = inversesqrt(_TMP37);
    _TMP311 = 1.00000000E+00/_TMP38;
    _rmean0320 = (_TMP4.x + _TMP6.x)/2.00000000E+00;
    _diff0320 = _TMP4.xyz - _TMP6.xyz;
    _K0320 = vec3(1.70000000E+01 + _rmean0320, 2.00000000E+01, 3.00000000E+00 - _rmean0320);
    _a0322 = _K0320*_diff0320;
    _TMP37 = dot(_a0322, _diff0320);
    _TMP38 = inversesqrt(_TMP37);
    _TMP319 = 1.00000000E+00/_TMP38;
    _rmean0328 = (_TMP6.x + _TMP10.x)/2.00000000E+00;
    _diff0328 = _TMP6.xyz - _TMP10.xyz;
    _K0328 = vec3(1.70000000E+01 + _rmean0328, 2.00000000E+01, 3.00000000E+00 - _rmean0328);
    _a0330 = _K0328*_diff0328;
    _TMP37 = dot(_a0330, _diff0328);
    _TMP38 = inversesqrt(_TMP37);
    _TMP327 = 1.00000000E+00/_TMP38;
    _TMP31 = vec4(_TMP303, _TMP311, _TMP319, _TMP327);
    _wd1 = _TMP27 + _TMP28 + _TMP29 + _TMP30 + 4.00000000E+00*_TMP31;
    _rmean0340 = (_TMP10.x + _TMP6.x)/2.00000000E+00;
    _diff0340 = _TMP10.xyz - _TMP6.xyz;
    _K0340 = vec3(1.70000000E+01 + _rmean0340, 2.00000000E+01, 3.00000000E+00 - _rmean0340);
    _a0342 = _K0340*_diff0340;
    _TMP37 = dot(_a0342, _diff0340);
    _TMP38 = inversesqrt(_TMP37);
    _TMP339 = 1.00000000E+00/_TMP38;
    _rmean0348 = (_TMP8.x + _TMP10.x)/2.00000000E+00;
    _diff0348 = _TMP8.xyz - _TMP10.xyz;
    _K0348 = vec3(1.70000000E+01 + _rmean0348, 2.00000000E+01, 3.00000000E+00 - _rmean0348);
    _a0350 = _K0348*_diff0348;
    _TMP37 = dot(_a0350, _diff0348);
    _TMP38 = inversesqrt(_TMP37);
    _TMP347 = 1.00000000E+00/_TMP38;
    _rmean0356 = (_TMP4.x + _TMP8.x)/2.00000000E+00;
    _diff0356 = _TMP4.xyz - _TMP8.xyz;
    _K0356 = vec3(1.70000000E+01 + _rmean0356, 2.00000000E+01, 3.00000000E+00 - _rmean0356);
    _a0358 = _K0356*_diff0356;
    _TMP37 = dot(_a0358, _diff0356);
    _TMP38 = inversesqrt(_TMP37);
    _TMP355 = 1.00000000E+00/_TMP38;
    _rmean0364 = (_TMP6.x + _TMP4.x)/2.00000000E+00;
    _diff0364 = _TMP6.xyz - _TMP4.xyz;
    _K0364 = vec3(1.70000000E+01 + _rmean0364, 2.00000000E+01, 3.00000000E+00 - _rmean0364);
    _a0366 = _K0364*_diff0364;
    _TMP37 = dot(_a0366, _diff0364);
    _TMP38 = inversesqrt(_TMP37);
    _TMP363 = 1.00000000E+00/_TMP38;
    _TMP27 = vec4(_TMP339, _TMP347, _TMP355, _TMP363);
    _rmean0374 = (_TMP10.x + _TMP14.x)/2.00000000E+00;
    _diff0374 = _TMP10.xyz - _TMP14.xyz;
    _K0374 = vec3(1.70000000E+01 + _rmean0374, 2.00000000E+01, 3.00000000E+00 - _rmean0374);
    _a0376 = _K0374*_diff0374;
    _TMP37 = dot(_a0376, _diff0374);
    _TMP38 = inversesqrt(_TMP37);
    _TMP373 = 1.00000000E+00/_TMP38;
    _rmean0382 = (_TMP8.x + _TMP18.x)/2.00000000E+00;
    _diff0382 = _TMP8.xyz - _TMP18.xyz;
    _K0382 = vec3(1.70000000E+01 + _rmean0382, 2.00000000E+01, 3.00000000E+00 - _rmean0382);
    _a0384 = _K0382*_diff0382;
    _TMP37 = dot(_a0384, _diff0382);
    _TMP38 = inversesqrt(_TMP37);
    _TMP381 = 1.00000000E+00/_TMP38;
    _rmean0390 = (_TMP4.x + _TMP0.x)/2.00000000E+00;
    _diff0390 = _TMP4.xyz - _TMP0.xyz;
    _K0390 = vec3(1.70000000E+01 + _rmean0390, 2.00000000E+01, 3.00000000E+00 - _rmean0390);
    _a0392 = _K0390*_diff0390;
    _TMP37 = dot(_a0392, _diff0390);
    _TMP38 = inversesqrt(_TMP37);
    _TMP389 = 1.00000000E+00/_TMP38;
    _rmean0398 = (_TMP6.x + _TMP17.x)/2.00000000E+00;
    _diff0398 = _TMP6.xyz - _TMP17.xyz;
    _K0398 = vec3(1.70000000E+01 + _rmean0398, 2.00000000E+01, 3.00000000E+00 - _rmean0398);
    _a0400 = _K0398*_diff0398;
    _TMP37 = dot(_a0400, _diff0398);
    _TMP38 = inversesqrt(_TMP37);
    _TMP397 = 1.00000000E+00/_TMP38;
    _TMP28 = vec4(_TMP373, _TMP381, _TMP389, _TMP397);
    _rmean0408 = (_TMP8.x + _TMP20.x)/2.00000000E+00;
    _diff0408 = _TMP8.xyz - _TMP20.xyz;
    _K0408 = vec3(1.70000000E+01 + _rmean0408, 2.00000000E+01, 3.00000000E+00 - _rmean0408);
    _a0410 = _K0408*_diff0408;
    _TMP37 = dot(_a0410, _diff0408);
    _TMP38 = inversesqrt(_TMP37);
    _TMP407 = 1.00000000E+00/_TMP38;
    _rmean0416 = (_TMP4.x + _TMP2.x)/2.00000000E+00;
    _diff0416 = _TMP4.xyz - _TMP2.xyz;
    _K0416 = vec3(1.70000000E+01 + _rmean0416, 2.00000000E+01, 3.00000000E+00 - _rmean0416);
    _a0418 = _K0416*_diff0416;
    _TMP37 = dot(_a0418, _diff0416);
    _TMP38 = inversesqrt(_TMP37);
    _TMP415 = 1.00000000E+00/_TMP38;
    _rmean0424 = (_TMP6.x + _TMP15.x)/2.00000000E+00;
    _diff0424 = _TMP6.xyz - _TMP15.xyz;
    _K0424 = vec3(1.70000000E+01 + _rmean0424, 2.00000000E+01, 3.00000000E+00 - _rmean0424);
    _a0426 = _K0424*_diff0424;
    _TMP37 = dot(_a0426, _diff0424);
    _TMP38 = inversesqrt(_TMP37);
    _TMP423 = 1.00000000E+00/_TMP38;
    _rmean0432 = (_TMP10.x + _TMP12.x)/2.00000000E+00;
    _diff0432 = _TMP10.xyz - _TMP12.xyz;
    _K0432 = vec3(1.70000000E+01 + _rmean0432, 2.00000000E+01, 3.00000000E+00 - _rmean0432);
    _a0434 = _K0432*_diff0432;
    _TMP37 = dot(_a0434, _diff0432);
    _TMP38 = inversesqrt(_TMP37);
    _TMP431 = 1.00000000E+00/_TMP38;
    _TMP29 = vec4(_TMP407, _TMP415, _TMP423, _TMP431);
    _rmean0442 = (_TMP8.x + _TMP4.x)/2.00000000E+00;
    _diff0442 = _TMP8.xyz - _TMP4.xyz;
    _K0442 = vec3(1.70000000E+01 + _rmean0442, 2.00000000E+01, 3.00000000E+00 - _rmean0442);
    _a0444 = _K0442*_diff0442;
    _TMP37 = dot(_a0444, _diff0442);
    _TMP38 = inversesqrt(_TMP37);
    _TMP441 = 1.00000000E+00/_TMP38;
    _rmean0450 = (_TMP4.x + _TMP6.x)/2.00000000E+00;
    _diff0450 = _TMP4.xyz - _TMP6.xyz;
    _K0450 = vec3(1.70000000E+01 + _rmean0450, 2.00000000E+01, 3.00000000E+00 - _rmean0450);
    _a0452 = _K0450*_diff0450;
    _TMP37 = dot(_a0452, _diff0450);
    _TMP38 = inversesqrt(_TMP37);
    _TMP449 = 1.00000000E+00/_TMP38;
    _rmean0458 = (_TMP6.x + _TMP10.x)/2.00000000E+00;
    _diff0458 = _TMP6.xyz - _TMP10.xyz;
    _K0458 = vec3(1.70000000E+01 + _rmean0458, 2.00000000E+01, 3.00000000E+00 - _rmean0458);
    _a0460 = _K0458*_diff0458;
    _TMP37 = dot(_a0460, _diff0458);
    _TMP38 = inversesqrt(_TMP37);
    _TMP457 = 1.00000000E+00/_TMP38;
    _rmean0466 = (_TMP10.x + _TMP8.x)/2.00000000E+00;
    _diff0466 = _TMP10.xyz - _TMP8.xyz;
    _K0466 = vec3(1.70000000E+01 + _rmean0466, 2.00000000E+01, 3.00000000E+00 - _rmean0466);
    _a0468 = _K0466*_diff0466;
    _TMP37 = dot(_a0468, _diff0466);
    _TMP38 = inversesqrt(_TMP37);
    _TMP465 = 1.00000000E+00/_TMP38;
    _TMP30 = vec4(_TMP441, _TMP449, _TMP457, _TMP465);
    _rmean0476 = (_TMP7.x + _TMP11.x)/2.00000000E+00;
    _diff0476 = _TMP7.xyz - _TMP11.xyz;
    _K0476 = vec3(1.70000000E+01 + _rmean0476, 2.00000000E+01, 3.00000000E+00 - _rmean0476);
    _a0478 = _K0476*_diff0476;
    _TMP37 = dot(_a0478, _diff0476);
    _TMP38 = inversesqrt(_TMP37);
    _TMP475 = 1.00000000E+00/_TMP38;
    _rmean0484 = (_TMP7.x + _TMP5.x)/2.00000000E+00;
    _diff0484 = _TMP7.xyz - _TMP5.xyz;
    _K0484 = vec3(1.70000000E+01 + _rmean0484, 2.00000000E+01, 3.00000000E+00 - _rmean0484);
    _a0486 = _K0484*_diff0484;
    _TMP37 = dot(_a0486, _diff0484);
    _TMP38 = inversesqrt(_TMP37);
    _TMP483 = 1.00000000E+00/_TMP38;
    _rmean0492 = (_TMP7.x + _TMP3.x)/2.00000000E+00;
    _diff0492 = _TMP7.xyz - _TMP3.xyz;
    _K0492 = vec3(1.70000000E+01 + _rmean0492, 2.00000000E+01, 3.00000000E+00 - _rmean0492);
    _a0494 = _K0492*_diff0492;
    _TMP37 = dot(_a0494, _diff0492);
    _TMP38 = inversesqrt(_TMP37);
    _TMP491 = 1.00000000E+00/_TMP38;
    _rmean0500 = (_TMP7.x + _TMP9.x)/2.00000000E+00;
    _diff0500 = _TMP7.xyz - _TMP9.xyz;
    _K0500 = vec3(1.70000000E+01 + _rmean0500, 2.00000000E+01, 3.00000000E+00 - _rmean0500);
    _a0502 = _K0500*_diff0500;
    _TMP37 = dot(_a0502, _diff0500);
    _TMP38 = inversesqrt(_TMP37);
    _TMP499 = 1.00000000E+00/_TMP38;
    _TMP31 = vec4(_TMP475, _TMP483, _TMP491, _TMP499);
    _wd2 = _TMP27 + _TMP28 + _TMP29 + _TMP30 + 4.00000000E+00*_TMP31;
    _edri = bvec4(_wd1.x <= _wd2.x && _interp_restriction_lv1.x, _wd1.y <= _wd2.y && _interp_restriction_lv1.y, _wd1.z <= _wd2.z && _interp_restriction_lv1.z, _wd1.w <= _wd2.w && _interp_restriction_lv1.w);
    _edr = bvec4(_wd1.x < _wd2.x && (!_edri.y || !_edri.w) && _interp_restriction_lv1.x, _wd1.y < _wd2.y && (!_edri.z || !_edri.x) && _interp_restriction_lv1.y, _wd1.z < _wd2.z && (!_edri.w || !_edri.y) && _interp_restriction_lv1.z, _wd1.w < _wd2.w && (!_edri.x || !_edri.z) && _interp_restriction_lv1.w);
    _rmean0510 = (_TMP8.x + _TMP9.x)/2.00000000E+00;
    _diff0510 = _TMP8.xyz - _TMP9.xyz;
    _K0510 = vec3(1.70000000E+01 + _rmean0510, 2.00000000E+01, 3.00000000E+00 - _rmean0510);
    _a0512 = _K0510*_diff0510;
    _TMP37 = dot(_a0512, _diff0510);
    _TMP38 = inversesqrt(_TMP37);
    _TMP509 = 1.00000000E+00/_TMP38;
    _rmean0518 = (_TMP4.x + _TMP11.x)/2.00000000E+00;
    _diff0518 = _TMP4.xyz - _TMP11.xyz;
    _K0518 = vec3(1.70000000E+01 + _rmean0518, 2.00000000E+01, 3.00000000E+00 - _rmean0518);
    _a0520 = _K0518*_diff0518;
    _TMP37 = dot(_a0520, _diff0518);
    _TMP38 = inversesqrt(_TMP37);
    _TMP517 = 1.00000000E+00/_TMP38;
    _rmean0526 = (_TMP6.x + _TMP5.x)/2.00000000E+00;
    _diff0526 = _TMP6.xyz - _TMP5.xyz;
    _K0526 = vec3(1.70000000E+01 + _rmean0526, 2.00000000E+01, 3.00000000E+00 - _rmean0526);
    _a0528 = _K0526*_diff0526;
    _TMP37 = dot(_a0528, _diff0526);
    _TMP38 = inversesqrt(_TMP37);
    _TMP525 = 1.00000000E+00/_TMP38;
    _rmean0534 = (_TMP10.x + _TMP3.x)/2.00000000E+00;
    _diff0534 = _TMP10.xyz - _TMP3.xyz;
    _K0534 = vec3(1.70000000E+01 + _rmean0534, 2.00000000E+01, 3.00000000E+00 - _rmean0534);
    _a0536 = _K0534*_diff0534;
    _TMP37 = dot(_a0536, _diff0534);
    _TMP38 = inversesqrt(_TMP37);
    _TMP533 = 1.00000000E+00/_TMP38;
    _TMP21 = vec4(_TMP509, _TMP517, _TMP525, _TMP533);
    _rmean0544 = (_TMP10.x + _TMP5.x)/2.00000000E+00;
    _diff0544 = _TMP10.xyz - _TMP5.xyz;
    _K0544 = vec3(1.70000000E+01 + _rmean0544, 2.00000000E+01, 3.00000000E+00 - _rmean0544);
    _a0546 = _K0544*_diff0544;
    _TMP37 = dot(_a0546, _diff0544);
    _TMP38 = inversesqrt(_TMP37);
    _TMP543 = 1.00000000E+00/_TMP38;
    _rmean0552 = (_TMP8.x + _TMP3.x)/2.00000000E+00;
    _diff0552 = _TMP8.xyz - _TMP3.xyz;
    _K0552 = vec3(1.70000000E+01 + _rmean0552, 2.00000000E+01, 3.00000000E+00 - _rmean0552);
    _a0554 = _K0552*_diff0552;
    _TMP37 = dot(_a0554, _diff0552);
    _TMP38 = inversesqrt(_TMP37);
    _TMP551 = 1.00000000E+00/_TMP38;
    _rmean0560 = (_TMP4.x + _TMP9.x)/2.00000000E+00;
    _diff0560 = _TMP4.xyz - _TMP9.xyz;
    _K0560 = vec3(1.70000000E+01 + _rmean0560, 2.00000000E+01, 3.00000000E+00 - _rmean0560);
    _a0562 = _K0560*_diff0560;
    _TMP37 = dot(_a0562, _diff0560);
    _TMP38 = inversesqrt(_TMP37);
    _TMP559 = 1.00000000E+00/_TMP38;
    _rmean0568 = (_TMP6.x + _TMP11.x)/2.00000000E+00;
    _diff0568 = _TMP6.xyz - _TMP11.xyz;
    _K0568 = vec3(1.70000000E+01 + _rmean0568, 2.00000000E+01, 3.00000000E+00 - _rmean0568);
    _a0570 = _K0568*_diff0568;
    _TMP37 = dot(_a0570, _diff0568);
    _TMP38 = inversesqrt(_TMP37);
    _TMP567 = 1.00000000E+00/_TMP38;
    _TMP22 = vec4(_TMP543, _TMP551, _TMP559, _TMP567);
    _rmean0580 = (_TMP7.x + _TMP5.x)/2.00000000E+00;
    _diff0580 = _TMP7.xyz - _TMP5.xyz;
    _K0580 = vec3(1.70000000E+01 + _rmean0580, 2.00000000E+01, 3.00000000E+00 - _rmean0580);
    _a0582 = _K0580*_diff0580;
    _TMP37 = dot(_a0582, _diff0580);
    _TMP38 = inversesqrt(_TMP37);
    _TMP579 = 1.00000000E+00/_TMP38;
    _rmean0588 = (_TMP7.x + _TMP3.x)/2.00000000E+00;
    _diff0588 = _TMP7.xyz - _TMP3.xyz;
    _K0588 = vec3(1.70000000E+01 + _rmean0588, 2.00000000E+01, 3.00000000E+00 - _rmean0588);
    _a0590 = _K0588*_diff0588;
    _TMP37 = dot(_a0590, _diff0588);
    _TMP38 = inversesqrt(_TMP37);
    _TMP587 = 1.00000000E+00/_TMP38;
    _rmean0596 = (_TMP7.x + _TMP9.x)/2.00000000E+00;
    _diff0596 = _TMP7.xyz - _TMP9.xyz;
    _K0596 = vec3(1.70000000E+01 + _rmean0596, 2.00000000E+01, 3.00000000E+00 - _rmean0596);
    _a0598 = _K0596*_diff0596;
    _TMP37 = dot(_a0598, _diff0596);
    _TMP38 = inversesqrt(_TMP37);
    _TMP595 = 1.00000000E+00/_TMP38;
    _rmean0604 = (_TMP7.x + _TMP11.x)/2.00000000E+00;
    _diff0604 = _TMP7.xyz - _TMP11.xyz;
    _K0604 = vec3(1.70000000E+01 + _rmean0604, 2.00000000E+01, 3.00000000E+00 - _rmean0604);
    _a0606 = _K0604*_diff0604;
    _TMP37 = dot(_a0606, _diff0604);
    _TMP38 = inversesqrt(_TMP37);
    _TMP603 = 1.00000000E+00/_TMP38;
    _TMP36 = vec4(_TMP579, _TMP587, _TMP595, _TMP603);
    _TMP23 = bvec4(_TMP36.x < 4.00000000E+00, _TMP36.y < 4.00000000E+00, _TMP36.z < 4.00000000E+00, _TMP36.w < 4.00000000E+00);
    _edr_left = bvec4((2.00000000E+00*_TMP21).x <= _TMP22.x && _interp_restriction_lv2_left.x && _edr.x && !_edri.y && _TMP23.x, (2.00000000E+00*_TMP21).y <= _TMP22.y && _interp_restriction_lv2_left.y && _edr.y && !_edri.z && _TMP23.y, (2.00000000E+00*_TMP21).z <= _TMP22.z && _interp_restriction_lv2_left.z && _edr.z && !_edri.w && _TMP23.z, (2.00000000E+00*_TMP21).w <= _TMP22.w && _interp_restriction_lv2_left.w && _edr.w && !_edri.x && _TMP23.w);
    _rmean0614 = (_TMP8.x + _TMP9.x)/2.00000000E+00;
    _diff0614 = _TMP8.xyz - _TMP9.xyz;
    _K0614 = vec3(1.70000000E+01 + _rmean0614, 2.00000000E+01, 3.00000000E+00 - _rmean0614);
    _a0616 = _K0614*_diff0614;
    _TMP37 = dot(_a0616, _diff0614);
    _TMP38 = inversesqrt(_TMP37);
    _TMP613 = 1.00000000E+00/_TMP38;
    _rmean0622 = (_TMP4.x + _TMP11.x)/2.00000000E+00;
    _diff0622 = _TMP4.xyz - _TMP11.xyz;
    _K0622 = vec3(1.70000000E+01 + _rmean0622, 2.00000000E+01, 3.00000000E+00 - _rmean0622);
    _a0624 = _K0622*_diff0622;
    _TMP37 = dot(_a0624, _diff0622);
    _TMP38 = inversesqrt(_TMP37);
    _TMP621 = 1.00000000E+00/_TMP38;
    _rmean0630 = (_TMP6.x + _TMP5.x)/2.00000000E+00;
    _diff0630 = _TMP6.xyz - _TMP5.xyz;
    _K0630 = vec3(1.70000000E+01 + _rmean0630, 2.00000000E+01, 3.00000000E+00 - _rmean0630);
    _a0632 = _K0630*_diff0630;
    _TMP37 = dot(_a0632, _diff0630);
    _TMP38 = inversesqrt(_TMP37);
    _TMP629 = 1.00000000E+00/_TMP38;
    _rmean0638 = (_TMP10.x + _TMP3.x)/2.00000000E+00;
    _diff0638 = _TMP10.xyz - _TMP3.xyz;
    _K0638 = vec3(1.70000000E+01 + _rmean0638, 2.00000000E+01, 3.00000000E+00 - _rmean0638);
    _a0640 = _K0638*_diff0638;
    _TMP37 = dot(_a0640, _diff0638);
    _TMP38 = inversesqrt(_TMP37);
    _TMP637 = 1.00000000E+00/_TMP38;
    _TMP24 = vec4(_TMP613, _TMP621, _TMP629, _TMP637);
    _rmean0648 = (_TMP10.x + _TMP5.x)/2.00000000E+00;
    _diff0648 = _TMP10.xyz - _TMP5.xyz;
    _K0648 = vec3(1.70000000E+01 + _rmean0648, 2.00000000E+01, 3.00000000E+00 - _rmean0648);
    _a0650 = _K0648*_diff0648;
    _TMP37 = dot(_a0650, _diff0648);
    _TMP38 = inversesqrt(_TMP37);
    _TMP647 = 1.00000000E+00/_TMP38;
    _rmean0656 = (_TMP8.x + _TMP3.x)/2.00000000E+00;
    _diff0656 = _TMP8.xyz - _TMP3.xyz;
    _K0656 = vec3(1.70000000E+01 + _rmean0656, 2.00000000E+01, 3.00000000E+00 - _rmean0656);
    _a0658 = _K0656*_diff0656;
    _TMP37 = dot(_a0658, _diff0656);
    _TMP38 = inversesqrt(_TMP37);
    _TMP655 = 1.00000000E+00/_TMP38;
    _rmean0664 = (_TMP4.x + _TMP9.x)/2.00000000E+00;
    _diff0664 = _TMP4.xyz - _TMP9.xyz;
    _K0664 = vec3(1.70000000E+01 + _rmean0664, 2.00000000E+01, 3.00000000E+00 - _rmean0664);
    _a0666 = _K0664*_diff0664;
    _TMP37 = dot(_a0666, _diff0664);
    _TMP38 = inversesqrt(_TMP37);
    _TMP663 = 1.00000000E+00/_TMP38;
    _rmean0672 = (_TMP6.x + _TMP11.x)/2.00000000E+00;
    _diff0672 = _TMP6.xyz - _TMP11.xyz;
    _K0672 = vec3(1.70000000E+01 + _rmean0672, 2.00000000E+01, 3.00000000E+00 - _rmean0672);
    _a0674 = _K0672*_diff0672;
    _TMP37 = dot(_a0674, _diff0672);
    _TMP38 = inversesqrt(_TMP37);
    _TMP671 = 1.00000000E+00/_TMP38;
    _TMP25 = vec4(_TMP647, _TMP655, _TMP663, _TMP671);
    _rmean0684 = (_TMP7.x + _TMP9.x)/2.00000000E+00;
    _diff0684 = _TMP7.xyz - _TMP9.xyz;
    _K0684 = vec3(1.70000000E+01 + _rmean0684, 2.00000000E+01, 3.00000000E+00 - _rmean0684);
    _a0686 = _K0684*_diff0684;
    _TMP37 = dot(_a0686, _diff0684);
    _TMP38 = inversesqrt(_TMP37);
    _TMP683 = 1.00000000E+00/_TMP38;
    _rmean0692 = (_TMP7.x + _TMP11.x)/2.00000000E+00;
    _diff0692 = _TMP7.xyz - _TMP11.xyz;
    _K0692 = vec3(1.70000000E+01 + _rmean0692, 2.00000000E+01, 3.00000000E+00 - _rmean0692);
    _a0694 = _K0692*_diff0692;
    _TMP37 = dot(_a0694, _diff0692);
    _TMP38 = inversesqrt(_TMP37);
    _TMP691 = 1.00000000E+00/_TMP38;
    _rmean0700 = (_TMP7.x + _TMP5.x)/2.00000000E+00;
    _diff0700 = _TMP7.xyz - _TMP5.xyz;
    _K0700 = vec3(1.70000000E+01 + _rmean0700, 2.00000000E+01, 3.00000000E+00 - _rmean0700);
    _a0702 = _K0700*_diff0700;
    _TMP37 = dot(_a0702, _diff0700);
    _TMP38 = inversesqrt(_TMP37);
    _TMP699 = 1.00000000E+00/_TMP38;
    _rmean0708 = (_TMP7.x + _TMP3.x)/2.00000000E+00;
    _diff0708 = _TMP7.xyz - _TMP3.xyz;
    _K0708 = vec3(1.70000000E+01 + _rmean0708, 2.00000000E+01, 3.00000000E+00 - _rmean0708);
    _a0710 = _K0708*_diff0708;
    _TMP37 = dot(_a0710, _diff0708);
    _TMP38 = inversesqrt(_TMP37);
    _TMP707 = 1.00000000E+00/_TMP38;
    _TMP36 = vec4(_TMP683, _TMP691, _TMP699, _TMP707);
    _TMP26 = bvec4(_TMP36.x < 4.00000000E+00, _TMP36.y < 4.00000000E+00, _TMP36.z < 4.00000000E+00, _TMP36.w < 4.00000000E+00);
    _edr_up = bvec4(_TMP24.x >= (2.00000000E+00*_TMP25).x && _interp_restriction_lv2_up.x && _edr.x && !_edri.w && _TMP26.x, _TMP24.y >= (2.00000000E+00*_TMP25).y && _interp_restriction_lv2_up.y && _edr.y && !_edri.x && _TMP26.y, _TMP24.z >= (2.00000000E+00*_TMP25).z && _interp_restriction_lv2_up.z && _edr.z && !_edri.y && _TMP26.z, _TMP24.w >= (2.00000000E+00*_TMP25).w && _interp_restriction_lv2_up.w && _edr.w && !_edri.z && _TMP26.w);
    _a0716 = vec4(float(_edr.x), float(_edr.y), float(_edr.z), float(_edr.w));
    _info.x = dot(_a0716, vec4( 8.00000000E+00, 4.00000000E+00, 2.00000000E+00, 1.00000000E+00));
    _a0718 = vec4(float(_edr_left.x), float(_edr_left.y), float(_edr_left.z), float(_edr_left.w));
    _info.y = dot(_a0718, vec4( 8.00000000E+00, 4.00000000E+00, 2.00000000E+00, 1.00000000E+00));
    _a0720 = vec4(float(_edr_up.x), float(_edr_up.y), float(_edr_up.z), float(_edr_up.w));
    _info.z = dot(_a0720, vec4( 8.00000000E+00, 4.00000000E+00, 2.00000000E+00, 1.00000000E+00));
    _a0722 = vec4(float(_edri.x), float(_edri.y), float(_edri.z), float(_edri.w));
    _info.w = dot(_a0722, vec4( 8.00000000E+00, 4.00000000E+00, 2.00000000E+00, 1.00000000E+00));
    _x0726 = _info/vec4( 2.55000000E+02, 2.55000000E+02, 2.55000000E+02, 2.55000000E+02);
    _TMP39 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0726);
    _TMP727 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP39);
    FragColor = _TMP727;
    return;
} 
#endif
