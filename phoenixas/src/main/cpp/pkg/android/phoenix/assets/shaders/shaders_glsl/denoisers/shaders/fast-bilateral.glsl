// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying
#define COMPAT_ATTRIBUTE attribute
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec2 _texCoord1;
COMPAT_VARYING     vec4 _color1;
COMPAT_VARYING     vec4 _position1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _position1;
    vec4 _color1;
    vec2 _texCoord1;
};
out_vertex _ret_0;
vec4 _r0008;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 COLOR;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 COL0;
COMPAT_VARYING vec4 TEX0;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    _r0008 = VertexCoord.x*MVPMatrix[0];
    _r0008 = _r0008 + VertexCoord.y*MVPMatrix[1];
    _r0008 = _r0008 + VertexCoord.z*MVPMatrix[2];
    _r0008 = _r0008 + VertexCoord.w*MVPMatrix[3];
    _ret_0._position1 = _r0008;
    _ret_0._color1 = COLOR;
    _ret_0._texCoord1 = TexCoord.xy;
    gl_Position = _r0008;
    COL0 = COLOR;
    TEX0.xy = TexCoord.xy;
    return;
    COL0 = _ret_0._color1;
    TEX0.xy = _ret_0._texCoord1;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec2 _texCoord;
COMPAT_VARYING     vec4 _color1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _color1;
    vec2 _texCoord;
};
vec4 _ret_0;
float _TMP78;
float _TMP77;
float _TMP76;
vec4 _TMP73;
vec4 _TMP70;
vec4 _TMP67;
vec4 _TMP64;
vec4 _TMP61;
vec4 _TMP58;
vec4 _TMP55;
vec4 _TMP52;
vec4 _TMP49;
vec4 _TMP46;
vec4 _TMP43;
vec4 _TMP40;
vec4 _TMP37;
vec4 _TMP34;
vec4 _TMP31;
vec4 _TMP28;
vec4 _TMP25;
vec4 _TMP22;
vec4 _TMP19;
vec4 _TMP16;
vec4 _TMP13;
vec4 _TMP10;
vec4 _TMP7;
vec4 _TMP4;
vec4 _TMP1;
vec4 _TMP0;
uniform sampler2D Texture;
input_dummy _IN1;
vec2 _c0086;
float _TMP87;
vec3 _TMP91;
vec3 _x0092;
vec2 _c0102;
float _TMP103;
vec3 _TMP107;
vec3 _x0108;
vec2 _c0118;
float _TMP119;
vec3 _TMP123;
vec3 _x0124;
vec2 _c0134;
float _TMP135;
vec3 _TMP139;
vec3 _x0140;
vec2 _c0150;
float _TMP151;
vec3 _TMP155;
vec3 _x0156;
vec2 _c0166;
float _TMP167;
vec3 _TMP171;
vec3 _x0172;
vec2 _c0182;
float _TMP183;
vec3 _TMP187;
vec3 _x0188;
vec2 _c0198;
float _TMP199;
vec3 _TMP203;
vec3 _x0204;
vec2 _c0214;
float _TMP215;
vec3 _TMP219;
vec3 _x0220;
vec2 _c0230;
float _TMP231;
vec3 _TMP235;
vec3 _x0236;
vec2 _c0246;
float _TMP247;
vec3 _TMP251;
vec3 _x0252;
vec2 _c0262;
float _TMP263;
vec3 _TMP267;
vec3 _x0268;
float _TMP279;
vec3 _TMP283;
vec3 _x0284;
vec2 _c0294;
float _TMP295;
vec3 _TMP299;
vec3 _x0300;
vec2 _c0310;
float _TMP311;
vec3 _TMP315;
vec3 _x0316;
vec2 _c0326;
float _TMP327;
vec3 _TMP331;
vec3 _x0332;
vec2 _c0342;
float _TMP343;
vec3 _TMP347;
vec3 _x0348;
vec2 _c0358;
float _TMP359;
vec3 _TMP363;
vec3 _x0364;
vec2 _c0374;
float _TMP375;
vec3 _TMP379;
vec3 _x0380;
vec2 _c0390;
float _TMP391;
vec3 _TMP395;
vec3 _x0396;
vec2 _c0406;
float _TMP407;
vec3 _TMP411;
vec3 _x0412;
vec2 _c0422;
float _TMP423;
vec3 _TMP427;
vec3 _x0428;
vec2 _c0438;
float _TMP439;
vec3 _TMP443;
vec3 _x0444;
vec2 _c0454;
float _TMP455;
vec3 _TMP459;
vec3 _x0460;
vec2 _c0470;
float _TMP471;
vec3 _TMP475;
vec3 _x0476;
COMPAT_VARYING vec4 TEX0;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec3 _color;
    vec3 _wsum;
    vec3 _weight;
    vec2 _dx;
    vec2 _dy;
    _dx = vec2( 1.00000000E+00, 0.00000000E+00)/TextureSize;
    _dy = vec2( 0.00000000E+00, 1.00000000E+00)/TextureSize;
    _TMP0 = COMPAT_TEXTURE(Texture, TEX0.xy);
    _c0086 = TEX0.xy + -2.00000000E+00*_dx + -2.00000000E+00*_dy;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0086);
    _TMP87 = pow(2.71828198E+00, -4.44444448E-01);
    _x0092 = (-(_TMP1.xyz - _TMP0.xyz)*(_TMP1.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0092.x);
    _TMP77 = pow(2.71828198E+00, _x0092.y);
    _TMP78 = pow(2.71828198E+00, _x0092.z);
    _TMP91 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP87*_TMP91;
    _color = _weight*_TMP1.xyz;
    _wsum = _weight;
    _c0102 = TEX0.xy + -_dx + -2.00000000E+00*_dy;
    _TMP4 = COMPAT_TEXTURE(Texture, _c0102);
    _TMP103 = pow(2.71828198E+00, -2.77777791E-01);
    _x0108 = (-(_TMP4.xyz - _TMP0.xyz)*(_TMP4.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0108.x);
    _TMP77 = pow(2.71828198E+00, _x0108.y);
    _TMP78 = pow(2.71828198E+00, _x0108.z);
    _TMP107 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP103*_TMP107;
    _color = _color + _weight*_TMP4.xyz;
    _wsum = _wsum + _weight;
    _c0118 = TEX0.xy + -2.00000000E+00*_dy;
    _TMP7 = COMPAT_TEXTURE(Texture, _c0118);
    _TMP119 = pow(2.71828198E+00, -2.22222224E-01);
    _x0124 = (-(_TMP7.xyz - _TMP0.xyz)*(_TMP7.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0124.x);
    _TMP77 = pow(2.71828198E+00, _x0124.y);
    _TMP78 = pow(2.71828198E+00, _x0124.z);
    _TMP123 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP119*_TMP123;
    _color = _color + _weight*_TMP7.xyz;
    _wsum = _wsum + _weight;
    _c0134 = TEX0.xy + _dx + -2.00000000E+00*_dy;
    _TMP10 = COMPAT_TEXTURE(Texture, _c0134);
    _TMP135 = pow(2.71828198E+00, -2.77777791E-01);
    _x0140 = (-(_TMP10.xyz - _TMP0.xyz)*(_TMP10.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0140.x);
    _TMP77 = pow(2.71828198E+00, _x0140.y);
    _TMP78 = pow(2.71828198E+00, _x0140.z);
    _TMP139 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP135*_TMP139;
    _color = _color + _weight*_TMP10.xyz;
    _wsum = _wsum + _weight;
    _c0150 = TEX0.xy + 2.00000000E+00*_dx + -2.00000000E+00*_dy;
    _TMP13 = COMPAT_TEXTURE(Texture, _c0150);
    _TMP151 = pow(2.71828198E+00, -4.44444448E-01);
    _x0156 = (-(_TMP13.xyz - _TMP0.xyz)*(_TMP13.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0156.x);
    _TMP77 = pow(2.71828198E+00, _x0156.y);
    _TMP78 = pow(2.71828198E+00, _x0156.z);
    _TMP155 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP151*_TMP155;
    _color = _color + _weight*_TMP13.xyz;
    _wsum = _wsum + _weight;
    _c0166 = TEX0.xy + -2.00000000E+00*_dx + -_dy;
    _TMP16 = COMPAT_TEXTURE(Texture, _c0166);
    _TMP167 = pow(2.71828198E+00, -2.77777791E-01);
    _x0172 = (-(_TMP16.xyz - _TMP0.xyz)*(_TMP16.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0172.x);
    _TMP77 = pow(2.71828198E+00, _x0172.y);
    _TMP78 = pow(2.71828198E+00, _x0172.z);
    _TMP171 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP167*_TMP171;
    _color = _color + _weight*_TMP16.xyz;
    _wsum = _wsum + _weight;
    _c0182 = TEX0.xy + -_dx + -_dy;
    _TMP19 = COMPAT_TEXTURE(Texture, _c0182);
    _TMP183 = pow(2.71828198E+00, -1.11111112E-01);
    _x0188 = (-(_TMP19.xyz - _TMP0.xyz)*(_TMP19.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0188.x);
    _TMP77 = pow(2.71828198E+00, _x0188.y);
    _TMP78 = pow(2.71828198E+00, _x0188.z);
    _TMP187 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP183*_TMP187;
    _color = _color + _weight*_TMP19.xyz;
    _wsum = _wsum + _weight;
    _c0198 = TEX0.xy + -_dy;
    _TMP22 = COMPAT_TEXTURE(Texture, _c0198);
    _TMP199 = pow(2.71828198E+00, -5.55555560E-02);
    _x0204 = (-(_TMP22.xyz - _TMP0.xyz)*(_TMP22.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0204.x);
    _TMP77 = pow(2.71828198E+00, _x0204.y);
    _TMP78 = pow(2.71828198E+00, _x0204.z);
    _TMP203 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP199*_TMP203;
    _color = _color + _weight*_TMP22.xyz;
    _wsum = _wsum + _weight;
    _c0214 = TEX0.xy + _dx + -_dy;
    _TMP25 = COMPAT_TEXTURE(Texture, _c0214);
    _TMP215 = pow(2.71828198E+00, -1.11111112E-01);
    _x0220 = (-(_TMP25.xyz - _TMP0.xyz)*(_TMP25.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0220.x);
    _TMP77 = pow(2.71828198E+00, _x0220.y);
    _TMP78 = pow(2.71828198E+00, _x0220.z);
    _TMP219 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP215*_TMP219;
    _color = _color + _weight*_TMP25.xyz;
    _wsum = _wsum + _weight;
    _c0230 = TEX0.xy + 2.00000000E+00*_dx + -_dy;
    _TMP28 = COMPAT_TEXTURE(Texture, _c0230);
    _TMP231 = pow(2.71828198E+00, -2.77777791E-01);
    _x0236 = (-(_TMP28.xyz - _TMP0.xyz)*(_TMP28.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0236.x);
    _TMP77 = pow(2.71828198E+00, _x0236.y);
    _TMP78 = pow(2.71828198E+00, _x0236.z);
    _TMP235 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP231*_TMP235;
    _color = _color + _weight*_TMP28.xyz;
    _wsum = _wsum + _weight;
    _c0246 = TEX0.xy + -2.00000000E+00*_dx;
    _TMP31 = COMPAT_TEXTURE(Texture, _c0246);
    _TMP247 = pow(2.71828198E+00, -2.22222224E-01);
    _x0252 = (-(_TMP31.xyz - _TMP0.xyz)*(_TMP31.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0252.x);
    _TMP77 = pow(2.71828198E+00, _x0252.y);
    _TMP78 = pow(2.71828198E+00, _x0252.z);
    _TMP251 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP247*_TMP251;
    _color = _color + _weight*_TMP31.xyz;
    _wsum = _wsum + _weight;
    _c0262 = TEX0.xy + -_dx;
    _TMP34 = COMPAT_TEXTURE(Texture, _c0262);
    _TMP263 = pow(2.71828198E+00, -5.55555560E-02);
    _x0268 = (-(_TMP34.xyz - _TMP0.xyz)*(_TMP34.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0268.x);
    _TMP77 = pow(2.71828198E+00, _x0268.y);
    _TMP78 = pow(2.71828198E+00, _x0268.z);
    _TMP267 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP263*_TMP267;
    _color = _color + _weight*_TMP34.xyz;
    _wsum = _wsum + _weight;
    _TMP37 = COMPAT_TEXTURE(Texture, TEX0.xy);
    _TMP279 = pow(2.71828198E+00, -0.00000000E+00);
    _x0284 = (-(_TMP37.xyz - _TMP0.xyz)*(_TMP37.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0284.x);
    _TMP77 = pow(2.71828198E+00, _x0284.y);
    _TMP78 = pow(2.71828198E+00, _x0284.z);
    _TMP283 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP279*_TMP283;
    _color = _color + _weight*_TMP37.xyz;
    _wsum = _wsum + _weight;
    _c0294 = TEX0.xy + _dx;
    _TMP40 = COMPAT_TEXTURE(Texture, _c0294);
    _TMP295 = pow(2.71828198E+00, -5.55555560E-02);
    _x0300 = (-(_TMP40.xyz - _TMP0.xyz)*(_TMP40.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0300.x);
    _TMP77 = pow(2.71828198E+00, _x0300.y);
    _TMP78 = pow(2.71828198E+00, _x0300.z);
    _TMP299 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP295*_TMP299;
    _color = _color + _weight*_TMP40.xyz;
    _wsum = _wsum + _weight;
    _c0310 = TEX0.xy + 2.00000000E+00*_dx;
    _TMP43 = COMPAT_TEXTURE(Texture, _c0310);
    _TMP311 = pow(2.71828198E+00, -2.22222224E-01);
    _x0316 = (-(_TMP43.xyz - _TMP0.xyz)*(_TMP43.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0316.x);
    _TMP77 = pow(2.71828198E+00, _x0316.y);
    _TMP78 = pow(2.71828198E+00, _x0316.z);
    _TMP315 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP311*_TMP315;
    _color = _color + _weight*_TMP43.xyz;
    _wsum = _wsum + _weight;
    _c0326 = TEX0.xy + -2.00000000E+00*_dx + _dy;
    _TMP46 = COMPAT_TEXTURE(Texture, _c0326);
    _TMP327 = pow(2.71828198E+00, -2.77777791E-01);
    _x0332 = (-(_TMP46.xyz - _TMP0.xyz)*(_TMP46.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0332.x);
    _TMP77 = pow(2.71828198E+00, _x0332.y);
    _TMP78 = pow(2.71828198E+00, _x0332.z);
    _TMP331 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP327*_TMP331;
    _color = _color + _weight*_TMP46.xyz;
    _wsum = _wsum + _weight;
    _c0342 = TEX0.xy + -_dx + _dy;
    _TMP49 = COMPAT_TEXTURE(Texture, _c0342);
    _TMP343 = pow(2.71828198E+00, -1.11111112E-01);
    _x0348 = (-(_TMP49.xyz - _TMP0.xyz)*(_TMP49.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0348.x);
    _TMP77 = pow(2.71828198E+00, _x0348.y);
    _TMP78 = pow(2.71828198E+00, _x0348.z);
    _TMP347 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP343*_TMP347;
    _color = _color + _weight*_TMP49.xyz;
    _wsum = _wsum + _weight;
    _c0358 = TEX0.xy + _dy;
    _TMP52 = COMPAT_TEXTURE(Texture, _c0358);
    _TMP359 = pow(2.71828198E+00, -5.55555560E-02);
    _x0364 = (-(_TMP52.xyz - _TMP0.xyz)*(_TMP52.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0364.x);
    _TMP77 = pow(2.71828198E+00, _x0364.y);
    _TMP78 = pow(2.71828198E+00, _x0364.z);
    _TMP363 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP359*_TMP363;
    _color = _color + _weight*_TMP52.xyz;
    _wsum = _wsum + _weight;
    _c0374 = TEX0.xy + _dx + _dy;
    _TMP55 = COMPAT_TEXTURE(Texture, _c0374);
    _TMP375 = pow(2.71828198E+00, -1.11111112E-01);
    _x0380 = (-(_TMP55.xyz - _TMP0.xyz)*(_TMP55.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0380.x);
    _TMP77 = pow(2.71828198E+00, _x0380.y);
    _TMP78 = pow(2.71828198E+00, _x0380.z);
    _TMP379 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP375*_TMP379;
    _color = _color + _weight*_TMP55.xyz;
    _wsum = _wsum + _weight;
    _c0390 = TEX0.xy + 2.00000000E+00*_dx + _dy;
    _TMP58 = COMPAT_TEXTURE(Texture, _c0390);
    _TMP391 = pow(2.71828198E+00, -2.77777791E-01);
    _x0396 = (-(_TMP58.xyz - _TMP0.xyz)*(_TMP58.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0396.x);
    _TMP77 = pow(2.71828198E+00, _x0396.y);
    _TMP78 = pow(2.71828198E+00, _x0396.z);
    _TMP395 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP391*_TMP395;
    _color = _color + _weight*_TMP58.xyz;
    _wsum = _wsum + _weight;
    _c0406 = TEX0.xy + -2.00000000E+00*_dx + 2.00000000E+00*_dy;
    _TMP61 = COMPAT_TEXTURE(Texture, _c0406);
    _TMP407 = pow(2.71828198E+00, -4.44444448E-01);
    _x0412 = (-(_TMP61.xyz - _TMP0.xyz)*(_TMP61.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0412.x);
    _TMP77 = pow(2.71828198E+00, _x0412.y);
    _TMP78 = pow(2.71828198E+00, _x0412.z);
    _TMP411 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP407*_TMP411;
    _color = _color + _weight*_TMP61.xyz;
    _wsum = _wsum + _weight;
    _c0422 = TEX0.xy + -_dx + 2.00000000E+00*_dy;
    _TMP64 = COMPAT_TEXTURE(Texture, _c0422);
    _TMP423 = pow(2.71828198E+00, -2.77777791E-01);
    _x0428 = (-(_TMP64.xyz - _TMP0.xyz)*(_TMP64.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0428.x);
    _TMP77 = pow(2.71828198E+00, _x0428.y);
    _TMP78 = pow(2.71828198E+00, _x0428.z);
    _TMP427 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP423*_TMP427;
    _color = _color + _weight*_TMP64.xyz;
    _wsum = _wsum + _weight;
    _c0438 = TEX0.xy + 2.00000000E+00*_dy;
    _TMP67 = COMPAT_TEXTURE(Texture, _c0438);
    _TMP439 = pow(2.71828198E+00, -2.22222224E-01);
    _x0444 = (-(_TMP67.xyz - _TMP0.xyz)*(_TMP67.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0444.x);
    _TMP77 = pow(2.71828198E+00, _x0444.y);
    _TMP78 = pow(2.71828198E+00, _x0444.z);
    _TMP443 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP439*_TMP443;
    _color = _color + _weight*_TMP67.xyz;
    _wsum = _wsum + _weight;
    _c0454 = TEX0.xy + _dx + 2.00000000E+00*_dy;
    _TMP70 = COMPAT_TEXTURE(Texture, _c0454);
    _TMP455 = pow(2.71828198E+00, -2.77777791E-01);
    _x0460 = (-(_TMP70.xyz - _TMP0.xyz)*(_TMP70.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0460.x);
    _TMP77 = pow(2.71828198E+00, _x0460.y);
    _TMP78 = pow(2.71828198E+00, _x0460.z);
    _TMP459 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP455*_TMP459;
    _color = _color + _weight*_TMP70.xyz;
    _wsum = _wsum + _weight;
    _c0470 = TEX0.xy + 2.00000000E+00*_dx + 2.00000000E+00*_dy;
    _TMP73 = COMPAT_TEXTURE(Texture, _c0470);
    _TMP471 = pow(2.71828198E+00, -4.44444448E-01);
    _x0476 = (-(_TMP73.xyz - _TMP0.xyz)*(_TMP73.xyz - _TMP0.xyz))/5.12000057E-04;
    _TMP76 = pow(2.71828198E+00, _x0476.x);
    _TMP77 = pow(2.71828198E+00, _x0476.y);
    _TMP78 = pow(2.71828198E+00, _x0476.z);
    _TMP475 = vec3(_TMP76, _TMP77, _TMP78);
    _weight = _TMP471*_TMP475;
    _color = _color + _weight*_TMP73.xyz;
    _wsum = _wsum + _weight;
    _color = _color/_wsum;
    _ret_0 = vec4(_color.x, _color.y, _color.z, 1.00000000E+00);
    FragColor = _ret_0;
    return;
} 
#endif
